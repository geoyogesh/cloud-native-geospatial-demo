version: "3.8"
services:
    data-loader:
      container_name: data_loader_open_source
      build:
        context: .
        dockerfile: loader-Dockerfile
      stdin_open: true # docker run -i
      tty: true        # docker run -t
      depends_on:
        db:
          condition: service_healthy
      volumes:
        - data_loader-data:/data/analysis
      networks:
        - opendata-network
      links:
        - "db:pgsql-server"
    
    featureserver:
      image: pramsey/pg_featureserv:latest
      restart: always
      environment:
        DATABASE_URL: postgresql://opendata_user:password@db/opendata
      ports:
        - "8001:9000"
      networks:
        - opendata-network
      depends_on:
        db:
          condition: service_healthy
    tileserver:
      image: pramsey/pg_tileserv:latest
      restart: always
      environment:
        DATABASE_URL: postgresql://opendata_user:password@db/opendata
      ports:
        - "8000:7800"
      networks:
        - opendata-network
      depends_on:
        db:
          condition: service_healthy
    web-api:
      build:
        context: .
        dockerfile: api-Dockerfile
      ports:
        - "5000:5000"
      volumes:
        - ./api:/api
      links:
          - "db:pgsql-server"
      networks:
          - opendata-network
      depends_on:
        db:
          condition: service_healthy
      environment:
        FLASK_ENV: development
    db:
        image: postgis/postgis:13-master
        restart: always
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            PGDATA: /var/lib/postgresql/data
        volumes:
          - db-data:/var/lib/postgresql/data
          - ./scripts/init.sh:/docker-entrypoint-initdb.d/init.sh
        ports:
          - "5432:5432"
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U postgres"]
          interval: 5s
          timeout: 5s
          retries: 3
          start_period: 10s
        command: postgres -c log_statement=all
        networks:
          - opendata-network
        
    pgadmin:
        image: dpage/pgadmin4:4.18
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@gmail.com
            PGADMIN_DEFAULT_PASSWORD: password
            PGADMIN_LISTEN_PORT: 80
        ports:
            - "5050:80"
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        links:
            - "db:pgsql-server"
        networks:
          - opendata-network
        depends_on:
          db:
            condition: service_healthy
volumes:
    db-data:
    pgadmin-data:
    data_loader-data:

networks:
  opendata-network:
    driver: bridge